(library
 (name jansson_c)
 (public_name jansson.c)
 (library_flags -linkall)
 (foreign_archives jansson)
 (flags
  (:standard -w -9-27))
 (ctypes
  (external_library_name jansson)
  (build_flags_resolver
   (vendored
    (c_flags :standard -I . -I src/c)
    (c_library_flags :standard)))
  (deps jansson.h jansson_config.h)
  (headers
   (include "jansson.h"))
  (type_description
   (instance Type)
   (functor Type_description))
  (function_description
   (concurrency sequential)
   (instance Functions)
   (functor Function_description))
  (generated_types Types_generated)
  (generated_entry_point C)))

; https://github.com/ocaml/dune/issues/4948 ergh...

(rule
 (deps
  (source_tree %{project_root}/vendor/jansson))
 (targets libjansson.a dlljansson.so jansson.h jansson_config.h)
 (enabled_if
  (= %{system} macosx))
 (action
  (no-infer
   (progn
    (chdir
     %{project_root}/vendor/jansson
     (progn
      ; (run autoreconf -if)
      (run mkdir -p build)
      (chdir
       %{project_root}/vendor/jansson/build
       (progn
        (run cmake .. -DJANSSON_BUILD_SHARED_LIBS=1)
        (setenv
         CFLAGS
         "%{ocaml-config:ocamlc_cflags}"
         (run make -j))
        (copy
         %{project_root}/vendor/jansson/build/lib/libjansson.dylib
         %{project_root}/src/c/dlljansson.so)
        (run rm -rf ./*)
        (run make clean)
        (run cmake .. -DJANSSON_BUILD_SHARED_LIBS=0)
        (setenv
         CFLAGS
         "%{ocaml-config:ocamlc_cflags}"
         (run make -j))
        (copy
         %{project_root}/vendor/jansson/build/include/jansson.h
         %{project_root}/src/c/jansson.h)
        (copy
         %{project_root}/vendor/jansson/build/include/jansson_config.h
         %{project_root}/src/c/jansson_config.h)
        (copy
         %{project_root}/vendor/jansson/build/lib/libjansson%{ext_lib}
         %{project_root}/src/c/libjansson.a)))))))))

(rule
 (deps
  (source_tree %{project_root}/vendor/jansson))
 (targets libjansson.a dlljansson.so jansson.h jansson_config.h)
 (enabled_if
  (<> %{system} macosx))
 (action
  (no-infer
   (progn
    (chdir
     %{project_root}/vendor/jansson
     (progn
      ; (run autoreconf -if)
      (run mkdir -p build)
      (chdir
       %{project_root}/vendor/jansson/build
       (progn
        (run cmake .. -DJANSSON_BUILD_SHARED_LIBS=1)
        (setenv
         CFLAGS
         "%{ocaml-config:ocamlc_cflags}"
         (run make -j))
        (copy
         %{project_root}/vendor/jansson/build/lib/libjansson%{ext_dll}
         %{project_root}/src/c/dlljansson.so)
        (run rm -rf ./*)
        (run make clean)
        (run cmake .. -DJANSSON_BUILD_SHARED_LIBS=0)
        (setenv
         CFLAGS
         "%{ocaml-config:ocamlc_cflags}"
         (run make -j))
        (copy
         %{project_root}/vendor/jansson/build/include/jansson.h
         %{project_root}/src/c/jansson.h)
        (copy
         %{project_root}/vendor/jansson/build/include/jansson_config.h
         %{project_root}/src/c/jansson_config.h)
        (copy
         %{project_root}/vendor/jansson/build/lib/libjansson%{ext_lib}
         %{project_root}/src/c/libjansson.a)))))))))
