(library
 (name jansson_c)
 (public_name jansson.c)
 (library_flags -linkall)
 (foreign_archives jansson)
 (flags
  (:standard -w -9-27))
 (ctypes
  (external_library_name jansson)
  (build_flags_resolver
   (vendored
    (c_flags :standard -I . -I src/c)
    (c_library_flags :standard)))
  (deps jansson.h jansson_config.h)
  (headers
   (include "jansson.h"))
  (type_description
   (instance Type)
   (functor Type_description))
  (function_description
   (concurrency sequential)
   (instance Functions)
   (functor Function_description))
  (generated_types Types_generated)
  (generated_entry_point C)))

; https://github.com/ocaml/dune/issues/4948 ergh...

(rule
 (deps
  (source_tree %{project_root}/vendor/jansson))
 (targets libjansson.a dlljansson.so jansson.h jansson_config.h)
 (enabled_if
  (= %{system} macosx))
 (action
  (no-infer
   (progn
    (chdir
     %{project_root}/vendor/jansson
     (progn
      (run autoreconf -i)
      (run mkdir -p install)
      (run ./configure)
      (setenv
       CFLAGS
       "%{ocaml-config:ocamlc_cflags} -fPIC"
       (run make -j))))
    (copy %{project_root}/vendor/jansson/src/jansson.h jansson.h)
    (copy %{project_root}/vendor/jansson/src/jansson_config.h jansson_config.h)
    (copy %{project_root}/vendor/jansson/src/.libs/libjansson%{ext_lib} libjansson.a)
    (copy %{project_root}/vendor/jansson/src/.libs/libjansson.dylib dlljansson.so)))))

(rule
 (deps
  (source_tree %{project_root}/vendor/jansson))
 (targets libjansson.a dlljansson.so jansson.h jansson_config.h)
 (enabled_if
  (<> %{system} macosx))
 (action
  (no-infer
   (progn
    (chdir
     %{project_root}/vendor/jansson
     (progn
      (run autoreconf -if)
      (run mkdir -p install)
      (run ./configure)
      (setenv
       CFLAGS
       "%{ocaml-config:ocamlc_cflags}"
       (run make -j))))
    (copy %{project_root}/vendor/jansson/src/jansson.h jansson.h)
    (copy %{project_root}/vendor/jansson/src/jansson_config.h jansson_config.h)
    (copy %{project_root}/vendor/jansson/src/.libs/libjansson%{ext_lib} libjansson.a)
    (copy %{project_root}/vendor/jansson/src/.libs/libjansson%{ext_dll} dlljansson.so)))))